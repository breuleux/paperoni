{
    "2384495648": {
        "logprob": -16.141,
        "prob": 9.77355964e-08,
        "Id": 2384495648,
        "Ti": "theano a python framework for fast computation of mathematical expressions",
        "Pt": "8",
        "Y": 2016,
        "D": "2016-05-09",
        "CC": 1066,
        "DN": "Theano: A Python framework for fast computation of mathematical expressions",
        "VFN": "arXiv: Symbolic Computation",
        "PB": "hgpu.org",
        "S": [
            {
                "Ty": 3,
                "U": "http://export.arxiv.org/pdf/1605.02688"
            },
            {
                "Ty": 3,
                "U": "https://arxiv.org/pdf/1605.02688.pdf"
            },
            {
                "Ty": 3,
                "U": "https://ru.arxiv.org/pdf/1605.02688"
            },
            {
                "Ty": 1,
                "U": "http://export.arxiv.org/abs/1605.02688"
            },
            {
                "Ty": 1,
                "U": "https://128.84.21.199/abs/1605.02688"
            },
            {
                "Ty": 1,
                "U": "https://dblp.uni-trier.de/db/journals/corr/corr1605.html#Al-RfouAAa16"
            },
            {
                "Ty": 1,
                "U": "https://hgpu.org/?p=15859"
            },
            {
                "Ty": 1,
                "U": "https://ru.arxiv.org/abs/1605.02688"
            },
            {
                "Ty": 1,
                "U": "https://ui.adsabs.harvard.edu/abs/2016arXiv160502688T/abstract"
            },
            {
                "Ty": 1,
                "U": "https://www.arxiv-vanity.com/papers/1605.02688/"
            },
            {
                "Ty": 1,
                "U": "https://www.arxiv.org/abs/1605.02688"
            },
            {
                "Ty": 1,
                "U": "https://za.arxiv.org/abs/1605.02688"
            }
        ],
        "BV": "arXiv preprint arXiv:1605.02688",
        "BT": "a",
        "AA": [
            {
                "DAuN": "Rami Al-Rfou",
                "AuN": "rami alrfou",
                "AuId": 73721942,
                "DAfN": ""
            },
            {
                "DAuN": "Guillaume Alain",
                "AuN": "guillaume alain",
                "AuId": 2170255565,
                "DAfN": ""
            },
            {
                "DAuN": "Amjad Almahairi",
                "AuN": "amjad almahairi",
                "AuId": 2224545695,
                "DAfN": ""
            },
            {
                "DAuN": "Christof Angermueller",
                "AuN": "christof angermueller",
                "AuId": 2054282363,
                "DAfN": ""
            },
            {
                "DAuN": "Dzmitry Bahdanau",
                "AuN": "dzmitry bahdanau",
                "AuId": 2509101809,
                "DAfN": ""
            },
            {
                "DAuN": "Nicolas Ballas",
                "AuN": "nicolas ballas",
                "AuId": 2937465296,
                "DAfN": ""
            },
            {
                "DAuN": "Fr\u00e9d\u00e9ric Bastien",
                "AuN": "frederic bastien",
                "AuId": 2303657406,
                "DAfN": ""
            },
            {
                "DAuN": "Justin Bayer",
                "AuN": "justin bayer",
                "AuId": 2129875008,
                "DAfN": ""
            },
            {
                "DAuN": "Anatoly Belikov",
                "AuN": "anatoly belikov",
                "AuId": 3034171366,
                "DAfN": ""
            },
            {
                "DAuN": "Alexander Belopolsky",
                "AuN": "alexander belopolsky",
                "AuId": 3033575609,
                "DAfN": ""
            },
            {
                "DAuN": "Yoshua Bengio",
                "AuN": "yoshua bengio",
                "AuId": 161269817,
                "DAfN": ""
            },
            {
                "DAuN": "Arnaud Bergeron",
                "AuN": "arnaud bergeron",
                "AuId": 2135636294,
                "DAfN": ""
            },
            {
                "DAuN": "James Bergstra",
                "AuN": "james bergstra",
                "AuId": 2020781963,
                "DAfN": ""
            },
            {
                "DAuN": "Valentin Bisson",
                "AuN": "valentin bisson",
                "AuId": 3033767969,
                "DAfN": ""
            },
            {
                "DAuN": "Josh Bleecher Snyder",
                "AuN": "josh bleecher snyder",
                "AuId": 3033841137,
                "DAfN": ""
            },
            {
                "DAuN": "Nicolas Bouchard",
                "AuN": "nicolas bouchard",
                "AuId": 2635863042,
                "DAfN": ""
            },
            {
                "DAuN": "Nicolas Boulanger-Lewandowski",
                "AuN": "nicolas boulangerlewandowski",
                "AuId": 136850560,
                "DAfN": ""
            },
            {
                "DAuN": "Xavier Bouthillier",
                "AuN": "xavier bouthillier",
                "AuId": 343899017,
                "DAfN": ""
            },
            {
                "DAuN": "Alexandre de Br\u00e9bisson",
                "AuN": "alexandre de brebisson",
                "AuId": 2219823832,
                "DAfN": ""
            },
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": ""
            },
            {
                "DAuN": "Pierre-Luc Carrier",
                "AuN": "pierreluc carrier",
                "AuId": 2422546145,
                "DAfN": ""
            },
            {
                "DAuN": "Kyunghyun Cho",
                "AuN": "kyunghyun cho",
                "AuId": 2462121670,
                "DAfN": ""
            },
            {
                "DAuN": "Jan Chorowski",
                "AuN": "jan chorowski",
                "AuId": 2335651288,
                "DAfN": ""
            },
            {
                "DAuN": "Paul Christiano",
                "AuN": "paul christiano",
                "AuId": 2513104511,
                "DAfN": ""
            },
            {
                "DAuN": "Tim Cooijmans",
                "AuN": "tim cooijmans",
                "AuId": 2570568648,
                "DAfN": ""
            },
            {
                "DAuN": "Marc-Alexandre C\u00f4t\u00e9",
                "AuN": "marcalexandre cote",
                "AuId": 2298930974,
                "DAfN": ""
            },
            {
                "DAuN": "Myriam C\u00f4t\u00e9",
                "AuN": "myriam cote",
                "AuId": 2696629632,
                "DAfN": ""
            },
            {
                "DAuN": "Aaron Courville",
                "AuN": "aaron courville",
                "AuId": 2328522601,
                "DAfN": ""
            },
            {
                "DAuN": "Yann N. Dauphin",
                "AuN": "yann n dauphin",
                "AuId": 1973263502,
                "DAfN": ""
            },
            {
                "DAuN": "Olivier Delalleau",
                "AuN": "olivier delalleau",
                "AuId": 1996854119,
                "DAfN": ""
            },
            {
                "DAuN": "Julien Demouth",
                "AuN": "julien demouth",
                "AuId": 3033318394,
                "DAfN": ""
            },
            {
                "DAuN": "Guillaume Desjardins",
                "AuN": "guillaume desjardins",
                "AuId": 1969031609,
                "DAfN": ""
            },
            {
                "DAuN": "Sander Dieleman",
                "AuN": "sander dieleman",
                "AuId": 2020844714,
                "DAfN": ""
            },
            {
                "DAuN": "Laurent Dinh",
                "AuN": "laurent dinh",
                "AuId": 2142243387,
                "DAfN": ""
            },
            {
                "DAuN": "M\u00e9lanie Ducoffe",
                "AuN": "melanie ducoffe",
                "AuId": 3033758118,
                "DAfN": ""
            },
            {
                "DAuN": "Vincent Dumoulin",
                "AuN": "vincent dumoulin",
                "AuId": 2101090258,
                "DAfN": ""
            },
            {
                "DAuN": "Samira Ebrahimi Kahou",
                "AuN": "samira ebrahimi kahou",
                "AuId": 243300917,
                "DAfN": ""
            },
            {
                "DAuN": "Dumitru Erhan",
                "AuN": "dumitru erhan",
                "AuId": 2308824398,
                "DAfN": ""
            },
            {
                "DAuN": "Ziye Fan",
                "AuN": "ziye fan",
                "AuId": 3033940219,
                "DAfN": ""
            },
            {
                "DAuN": "Orhan Firat",
                "AuN": "orhan firat",
                "AuId": 1941184757,
                "DAfN": ""
            },
            {
                "DAuN": "Mathieu Germain",
                "AuN": "mathieu germain",
                "AuId": 2348930736,
                "DAfN": ""
            },
            {
                "DAuN": "Xavier Glorot",
                "AuN": "xavier glorot",
                "AuId": 295353625,
                "DAfN": ""
            },
            {
                "DAuN": "Ian Goodfellow",
                "AuN": "ian j goodfellow",
                "AuId": 1822555116,
                "DAfN": ""
            },
            {
                "DAuN": "Matt Graham",
                "AuN": "matthew m graham",
                "AuId": 2513286714,
                "DAfN": ""
            },
            {
                "DAuN": "Caglar Gulcehre",
                "AuN": "caglar gulcehre",
                "AuId": 152899538,
                "DAfN": ""
            },
            {
                "DAuN": "Philippe Hamel",
                "AuN": "philippe hamel",
                "AuId": 2179286311,
                "DAfN": ""
            },
            {
                "DAuN": "Iban Harlouchet",
                "AuN": "iban harlouchet",
                "AuId": 3033284492,
                "DAfN": ""
            },
            {
                "DAuN": "Jean-Philippe Heng",
                "AuN": "jeanphilippe heng",
                "AuId": 3034078936,
                "DAfN": ""
            },
            {
                "DAuN": "Bal\u00e1zs Hidasi",
                "AuN": "balazs hidasi",
                "AuId": 1950878799,
                "DAfN": ""
            },
            {
                "DAuN": "Sina Honari",
                "AuN": "sina honari",
                "AuId": 1784075455,
                "DAfN": ""
            },
            {
                "DAuN": "Arjun Jain",
                "AuN": "arjun jain",
                "AuId": 2471266901,
                "DAfN": ""
            },
            {
                "DAuN": "S\u00e9bastien Jean",
                "AuN": "sebastien jean",
                "AuId": 2497966537,
                "DAfN": ""
            },
            {
                "DAuN": "Kai Jia",
                "AuN": "kai jia",
                "AuId": 3034138241,
                "DAfN": ""
            },
            {
                "DAuN": "Mikhail Korobov",
                "AuN": "mikhail korobov",
                "AuId": 3032929993,
                "DAfN": ""
            },
            {
                "DAuN": "Vivek Kulkarni",
                "AuN": "vivek kulkarni",
                "AuId": 2148548682,
                "DAfN": ""
            },
            {
                "DAuN": "Alex Lamb",
                "AuN": "alex lamb",
                "AuId": 2474195657,
                "DAfN": ""
            },
            {
                "DAuN": "Pascal Lamblin",
                "AuN": "pascal lamblin",
                "AuId": 2309553220,
                "DAfN": ""
            },
            {
                "DAuN": "Eric Larsen",
                "AuN": "eric larsen",
                "AuId": 3033494169,
                "DAfN": ""
            },
            {
                "DAuN": "C\u00e9sar Laurent",
                "AuN": "cesar laurent",
                "AuId": 2250018335,
                "DAfN": ""
            },
            {
                "DAuN": "Sean Lee",
                "AuN": "sean lee",
                "AuId": 3034117442,
                "DAfN": ""
            },
            {
                "DAuN": "Simon Lefrancois",
                "AuN": "simon lefrancois",
                "AuId": 2567920245,
                "DAfN": ""
            },
            {
                "DAuN": "Simon Lemieux",
                "AuN": "simon lemieux",
                "AuId": 2763402448,
                "DAfN": ""
            },
            {
                "DAuN": "Nicholas L\u00e9onard",
                "AuN": "nicholas leonard",
                "AuId": 2462356966,
                "DAfN": ""
            },
            {
                "DAuN": "Zhouhan Lin",
                "AuN": "zhouhan lin",
                "AuId": 2584500735,
                "DAfN": ""
            },
            {
                "DAuN": "Jesse A. Livezey",
                "AuN": "jesse a livezey",
                "AuId": 2045302632,
                "DAfN": ""
            },
            {
                "DAuN": "Cory Lorenz",
                "AuN": "cory lorenz",
                "AuId": 3033466353,
                "DAfN": ""
            },
            {
                "DAuN": "Jeremiah Lowin",
                "AuN": "jeremiah lowin",
                "AuId": 3033467911,
                "DAfN": ""
            },
            {
                "DAuN": "Qianli Ma",
                "AuN": "qianli ma",
                "AuId": 3033771288,
                "DAfN": ""
            },
            {
                "DAuN": "Pierre-Antoine Manzagol",
                "AuN": "pierreantoine manzagol",
                "AuId": 278754694,
                "DAfN": ""
            },
            {
                "DAuN": "Olivier Mastropietro",
                "AuN": "olivier mastropietro",
                "AuId": 2750617804,
                "DAfN": ""
            },
            {
                "DAuN": "Robert T. McGibbon",
                "AuN": "robert t mcgibbon",
                "AuId": 1984887102,
                "DAfN": ""
            },
            {
                "DAuN": "Roland Memisevic",
                "AuN": "roland memisevic",
                "AuId": 1976226184,
                "DAfN": ""
            },
            {
                "DAuN": "Bart van Merri\u00ebnboer",
                "AuN": "bart van merrienboer",
                "AuId": 256273151,
                "DAfN": ""
            },
            {
                "DAuN": "Vincent Michalski",
                "AuN": "vincent michalski",
                "AuId": 2017072634,
                "DAfN": ""
            },
            {
                "DAuN": "Mehdi Mirza",
                "AuN": "mehdi mirza",
                "AuId": 2668737056,
                "DAfN": ""
            },
            {
                "DAuN": "Alberto Orlandi",
                "AuN": "alberto orlandi",
                "AuId": 3033329939,
                "DAfN": ""
            },
            {
                "DAuN": "Christopher Pal",
                "AuN": "chris pal",
                "AuId": 2168619732,
                "DAfN": ""
            },
            {
                "DAuN": "Razvan Pascanu",
                "AuN": "razvan pascanu",
                "AuId": 662855036,
                "DAfN": ""
            },
            {
                "DAuN": "Mohammad Pezeshki",
                "AuN": "mohammad pezeshki",
                "AuId": 2255537962,
                "DAfN": ""
            },
            {
                "DAuN": "Colin Raffel",
                "AuN": "colin raffel",
                "AuId": 2001631461,
                "DAfN": ""
            },
            {
                "DAuN": "Daniel Renshaw",
                "AuN": "daniel renshaw",
                "AuId": 3033908820,
                "DAfN": ""
            },
            {
                "DAuN": "Matthew Rocklin",
                "AuN": "matthew rocklin",
                "AuId": 2024897293,
                "DAfN": ""
            },
            {
                "DAuN": "Adriana Romero",
                "AuN": "adriana romero",
                "AuId": 2338406099,
                "DAfN": ""
            },
            {
                "DAuN": "Markus Roth",
                "AuN": "markus roth",
                "AuId": 3033344363,
                "DAfN": ""
            },
            {
                "DAuN": "Peter Sadowski",
                "AuN": "peter sadowski",
                "AuId": 2099159571,
                "DAfN": ""
            },
            {
                "DAuN": "John Salvatier",
                "AuN": "john salvatier",
                "AuId": 3033609995,
                "DAfN": ""
            },
            {
                "DAuN": "Fran\u00e7ois Savard",
                "AuN": "francois savard",
                "AuId": 2643493202,
                "DAfN": ""
            },
            {
                "DAuN": "Jan Schl\u00fcter",
                "AuN": "jan schluter",
                "AuId": 1997708573,
                "DAfN": ""
            },
            {
                "DAuN": "John Schulman",
                "AuN": "john schulman",
                "AuId": 2227001754,
                "DAfN": ""
            },
            {
                "DAuN": "Gabriel Schwartz",
                "AuN": "gabriel schwartz",
                "AuId": 3033271950,
                "DAfN": ""
            },
            {
                "DAuN": "Iulian Vlad Serban",
                "AuN": "iulian vlad serban",
                "AuId": 2221625686,
                "DAfN": ""
            },
            {
                "DAuN": "Dmitriy Serdyuk",
                "AuN": "dmitriy serdyuk",
                "AuId": 1973664376,
                "DAfN": ""
            },
            {
                "DAuN": "Samira Shabanian",
                "AuN": "samira shabanian",
                "AuId": 2337603880,
                "DAfN": ""
            },
            {
                "DAuN": "\u00c9tienne Simon",
                "AuN": "etienne simon",
                "AuId": 3033580708,
                "DAfN": ""
            },
            {
                "DAuN": "Sigurd Spieckermann",
                "AuN": "sigurd spieckermann",
                "AuId": 3033891984,
                "DAfN": ""
            },
            {
                "DAuN": "S. Ramana Subramanyam",
                "AuN": "s ramana subramanyam",
                "AuId": 3033908228,
                "DAfN": ""
            },
            {
                "DAuN": "Jakub Sygnowski",
                "AuN": "jakub sygnowski",
                "AuId": 2519526940,
                "DAfN": ""
            },
            {
                "DAuN": "J\u00e9r\u00e9mie Tanguay",
                "AuN": "jeremie tanguay",
                "AuId": 3033116521,
                "DAfN": ""
            },
            {
                "DAuN": "Gijs van Tulder",
                "AuN": "gijs van tulder",
                "AuId": 2258709890,
                "DAfN": ""
            },
            {
                "DAuN": "Joseph Turian",
                "AuN": "joseph turian",
                "AuId": 2036062915,
                "DAfN": ""
            },
            {
                "DAuN": "Sebastian Urban",
                "AuN": "sebastian urban",
                "AuId": 2103885642,
                "DAfN": ""
            },
            {
                "DAuN": "Pascal Vincent",
                "AuN": "pascal vincent",
                "AuId": 2397241174,
                "DAfN": ""
            },
            {
                "DAuN": "Francesco Visin",
                "AuN": "francesco visin",
                "AuId": 2497252181,
                "DAfN": ""
            },
            {
                "DAuN": "Harm de Vries",
                "AuN": "harm de vries",
                "AuId": 2643778622,
                "DAfN": ""
            },
            {
                "DAuN": "David Warde-Farley",
                "AuN": "david wardefarley",
                "AuId": 15795219,
                "DAfN": ""
            },
            {
                "DAuN": "Dustin J. Webb",
                "AuN": "dustin j webb",
                "AuId": 2108107062,
                "DAfN": ""
            },
            {
                "DAuN": "Matthew Willson",
                "AuN": "matthew willson",
                "AuId": 3033867387,
                "DAfN": ""
            },
            {
                "DAuN": "Kelvin Xu",
                "AuN": "kelvin xu",
                "AuId": 2485834696,
                "DAfN": ""
            },
            {
                "DAuN": "Lijun Xue",
                "AuN": "lijun xue",
                "AuId": 3033599690,
                "DAfN": ""
            },
            {
                "DAuN": "Li Yao",
                "AuN": "li yao",
                "AuId": 2127602766,
                "DAfN": ""
            },
            {
                "DAuN": "Saizheng Zhang",
                "AuN": "saizheng zhang",
                "AuId": 2116565841,
                "DAfN": ""
            },
            {
                "DAuN": "Ying Zhang",
                "AuN": "ying zhang",
                "AuId": 2601734797,
                "DAfN": ""
            }
        ],
        "F": [
            {
                "FN": "theano",
                "FId": 2776159882
            },
            {
                "FN": "python",
                "FId": 519991488
            },
            {
                "FN": "symbolic computation",
                "FId": 110812573
            },
            {
                "FN": "cuda",
                "FId": 2778119891
            },
            {
                "FN": "software",
                "FId": 2777904410
            },
            {
                "FN": "compiler",
                "FId": 169590947
            },
            {
                "FN": "deep learning",
                "FId": 108583219
            },
            {
                "FN": "expression",
                "FId": 76482347
            },
            {
                "FN": "programming language",
                "FId": 199360897
            },
            {
                "FN": "theoretical computer science",
                "FId": 80444323
            },
            {
                "FN": "mathematics",
                "FId": 33923547
            },
            {
                "FN": "artificial intelligence",
                "FId": 154945302
            }
        ],
        "J": {
            "JN": "arxiv symbolic computation",
            "JId": 2595940331
        },
        "abstract": "Theano is a Python library that allows to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently. Since its introduction, it has been one of the most used CPU and GPU mathematical compilers - especially in the machine learning community - and has shown steady performance improvements. Theano is being actively and continuously developed since 2008, multiple frameworks have been built on top of it and it has been used to produce many state-of-the-art machine learning models. \r\nThe present article is structured as follows. Section I provides an overview of the Theano software and its community. Section II presents the principal features of Theano and how to use them, and compares them with other similar projects. Section III focuses on recently-introduced functionalities and improvements. Section IV compares the performance of Theano against Torch7 and TensorFlow on several machine learning models. Section V discusses current limitations of Theano and potential ways of improving it."
    },
    "2152175008": {
        "logprob": -17.222,
        "prob": 3.31573973e-08,
        "Id": 2152175008,
        "Ti": "theano a cpu and gpu math compiler in python",
        "Pt": "0",
        "Y": 2010,
        "D": "2010-01-01",
        "CC": 587,
        "DN": "Theano: A CPU and GPU Math Compiler in Python",
        "LP": "24",
        "VFN": "Proceedings of the 9th Python in Science Conference",
        "FP": "18",
        "PB": "hgpu.org",
        "S": [
            {
                "Ty": 3,
                "U": "http://conference.scipy.org/proceedings/scipy2010/pdfs/bergstra.pdf"
            },
            {
                "Ty": 3,
                "U": "http://www.iro.umontreal.ca/~lisa/pointeurs/theano_scipy2010.pdf"
            },
            {
                "Ty": 1,
                "U": "http://conference.scipy.org/proceedings/scipy2010/bergstra.html"
            },
            {
                "Ty": 1,
                "U": "https://hgpu.org/?p=6556"
            }
        ],
        "BV": "Proceedings of the 9th Python in Science Conference",
        "BT": "p",
        "AA": [
            {
                "DAuN": "James Bergstra",
                "AuN": "james bergstra",
                "AuId": 2020781963,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": ""
            },
            {
                "DAuN": "Fr\u00e9d\u00e9ric Bastien",
                "AuN": "frederic bastien",
                "AuId": 2303657406,
                "DAfN": ""
            },
            {
                "DAuN": "Pascal Lamblin",
                "AuN": "pascal lamblin",
                "AuId": 2309553220,
                "DAfN": ""
            },
            {
                "DAuN": "Razvan Pascanu",
                "AuN": "razvan pascanu",
                "AuId": 662855036,
                "DAfN": ""
            },
            {
                "DAuN": "Guillaume Desjardins",
                "AuN": "guillaume desjardins",
                "AuId": 1969031609,
                "DAfN": ""
            },
            {
                "DAuN": "Joseph Turian",
                "AuN": "joseph turian",
                "AuId": 2036062915,
                "DAfN": ""
            },
            {
                "DAuN": "David Warde-Farley",
                "AuN": "david wardefarley",
                "AuId": 15795219,
                "DAfN": ""
            },
            {
                "DAuN": "Yoshua Bengio",
                "AuN": "yoshua bengio",
                "AuId": 161269817,
                "DAfN": ""
            }
        ],
        "F": [
            {
                "FN": "theano",
                "FId": 2776159882
            },
            {
                "FN": "numpy",
                "FId": 2778689873
            },
            {
                "FN": "python",
                "FId": 519991488
            },
            {
                "FN": "compiler",
                "FId": 169590947
            },
            {
                "FN": "cuda",
                "FId": 2778119891
            },
            {
                "FN": "matlab",
                "FId": 2780365114
            },
            {
                "FN": "machine code",
                "FId": 115168132
            },
            {
                "FN": "central processing unit",
                "FId": 49154492
            },
            {
                "FN": "programming language",
                "FId": 199360897
            },
            {
                "FN": "parallel computing",
                "FId": 173608175
            },
            {
                "FN": "computer science",
                "FId": 41008148
            }
        ],
        "abstract": "Theano is a compiler for mathematical expressions in Python that combines the convenience of NumPy's syntax with the speed of optimized native machine language. The user composes mathematical expressions in a high-level description that mimics NumPy's syntax and semantics, while being statically typed and functional (as opposed to imperative). These expressions allow Theano to provide symbolic differentiation. Before performing computation, Theano optimizes the choice of expressions, translates them into C++ (or CUDA for GPU), compiles them into dynamically loaded Python modules, all automatically. Common machine learn- ing algorithms implemented with Theano are from 1:6 to 7:5 faster than competitive alternatives (including those implemented with C/C++, NumPy/SciPy and MATLAB) when compiled for the CPU and between 6:5 and 44 faster when compiled for the GPU. This paper illustrates how to use Theano, outlines the scope of the compiler, provides benchmarks on both CPU and GPU processors, and explains its overall design."
    },
    "2254715784": {
        "logprob": -17.897,
        "prob": 1.68823017e-08,
        "Id": 2254715784,
        "Ti": "theano deep learning on gpus with python",
        "Pt": "0",
        "Y": 2012,
        "D": "2012-01-01",
        "CC": 158,
        "DN": "Theano: Deep Learning on GPUs with Python",
        "PB": "hgpu.org",
        "S": [
            {
                "Ty": 1,
                "U": "https://hgpu.org/?p=6940"
            }
        ],
        "BT": "a",
        "AA": [
            {
                "DAuN": "James Bergstra",
                "AuN": "james bergstra",
                "AuId": 2020781963,
                "DAfN": ""
            },
            {
                "DAuN": "Frederic Bastien",
                "AuN": "frederic bastien",
                "AuId": 2303657406,
                "DAfN": ""
            },
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": ""
            },
            {
                "DAuN": "Pascal Lamblin",
                "AuN": "pascal lamblin",
                "AuId": 2309553220,
                "DAfN": ""
            },
            {
                "DAuN": "Razvan Pascanu",
                "AuN": "razvan pascanu",
                "AuId": 662855036,
                "DAfN": ""
            },
            {
                "DAuN": "Olivier Delalleau",
                "AuN": "olivier delalleau",
                "AuId": 1996854119,
                "DAfN": ""
            },
            {
                "DAuN": "Guillaume Desjardins",
                "AuN": "guillaume desjardins",
                "AuId": 1969031609,
                "DAfN": ""
            },
            {
                "DAuN": "David Warde-Farley",
                "AuN": "david wardefarley",
                "AuId": 15795219,
                "DAfN": ""
            },
            {
                "DAuN": "Ian Goodfellow",
                "AuN": "ian j goodfellow",
                "AuId": 1822555116,
                "DAfN": ""
            },
            {
                "DAuN": "Arnaud Bergeron",
                "AuN": "arnaud bergeron",
                "AuId": 2135636294,
                "DAfN": ""
            },
            {
                "DAuN": "Yoshua Bengio",
                "AuN": "yoshua bengio",
                "AuId": 161269817,
                "DAfN": ""
            }
        ],
        "F": [
            {
                "FN": "theano",
                "FId": 2776159882
            },
            {
                "FN": "numpy",
                "FId": 2778689873
            },
            {
                "FN": "python",
                "FId": 519991488
            },
            {
                "FN": "cuda",
                "FId": 2778119891
            },
            {
                "FN": "compiler",
                "FId": 169590947
            },
            {
                "FN": "deep learning",
                "FId": 108583219
            },
            {
                "FN": "programming language",
                "FId": 199360897
            },
            {
                "FN": "expression",
                "FId": 76482347
            },
            {
                "FN": "parallel computing",
                "FId": 173608175
            },
            {
                "FN": "computer science",
                "FId": 41008148
            },
            {
                "FN": "artificial intelligence",
                "FId": 154945302
            }
        ],
        "abstract": "In this paper, we present Theano 1 , a framework in the Python programming language for defining, optimizing and evaluating expressions involving high-level operations on tensors. Theano offers most of NumPy\u2019s functionality, but adds automatic symbolic differentiation, GPU support, and faster expression evaluation. Theano is a general mathematical tool, but it was developed with the goal of facilitating research in deep learning. The Deep Learning Tutorials 2 introduce recent advances in deep learning, and showcase how Theano"
    },
    "2106439909": {
        "logprob": -17.964,
        "prob": 1.57882475e-08,
        "Id": 2106439909,
        "Ti": "quickly generating representative samples from an rbm derived process",
        "Pt": "1",
        "Y": 2011,
        "D": "2011-08-01",
        "CC": 56,
        "DN": "Quickly generating representative samples from an rbm-derived process",
        "LP": "2073",
        "V": "23",
        "VFN": "Neural Computation",
        "I": "8",
        "FP": "2058",
        "PB": "MIT Press 238 Main St., Suite 500, Cambridge, MA 02142-1046, USA email: journals-info@mit.edu",
        "S": [
            {
                "U": "http://cognet.mit.edu/node/31649"
            },
            {
                "Ty": 3,
                "U": "http://www-labs.iro.umontreal.ca/~vincentp/Publications/GeneratingSamples_NeuralComp2011.pdf"
            },
            {
                "Ty": 3,
                "U": "http://www.iro.umontreal.ca/~vincentp/Publications/GeneratingSamples_NeuralComp2011.pdf"
            },
            {
                "Ty": 3,
                "U": "https://www.mitpressjournals.org/doi/pdfplus/10.1162/NECO_a_00158"
            },
            {
                "Ty": 1,
                "U": "http://cognet.mit.edu/journal/10.1162/NECO_a_00158"
            },
            {
                "Ty": 1,
                "U": "https://dblp.uni-trier.de/db/journals/neco/neco23.html#BreuleuxBV11"
            },
            {
                "Ty": 1,
                "U": "https://doi.org/10.1162/NECO_a_00158"
            },
            {
                "Ty": 1,
                "U": "https://www.mitpressjournals.org/doi/abs/10.1162/NECO_a_00158"
            }
        ],
        "BV": "Neural Computation",
        "BT": "a",
        "AA": [
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Yoshua Bengio",
                "AuN": "yoshua bengio",
                "AuId": 161269817,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Pascal Vincent",
                "AuN": "pascal vincent",
                "AuId": 2397241174,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            }
        ],
        "F": [
            {
                "FN": "slice sampling",
                "FId": 170593435
            },
            {
                "FN": "gibbs sampling",
                "FId": 158424031
            },
            {
                "FN": "sampling",
                "FId": 90842384
            },
            {
                "FN": "herding",
                "FId": 177605951
            },
            {
                "FN": "markov chain",
                "FId": 98763669
            },
            {
                "FN": "asymptotic distribution",
                "FId": 65778772
            },
            {
                "FN": "upper and lower bounds",
                "FId": 77553402
            },
            {
                "FN": "algorithm",
                "FId": 11413529
            },
            {
                "FN": "machine learning",
                "FId": 119857082
            },
            {
                "FN": "exploit",
                "FId": 165696696
            },
            {
                "FN": "mathematics",
                "FId": 33923547
            },
            {
                "FN": "artificial intelligence",
                "FId": 154945302
            }
        ],
        "J": {
            "JN": "neural computation",
            "JId": 207023548
        },
        "abstract": "Two recently proposed learning algorithms, herding and fast persistent contrastive divergence (FPCD), share the following interesting characteristic: they exploit changes in the model parameters while sampling in order to escape modes and mix better during the sampling process that is part of the learning algorithm. We justify such approaches as ways to escape modes while keeping approximately the same asymptotic distribution of the Markov chain. In that spirit, we extend FPCD using an idea borrowed from Herding in order to obtain a pure sampling algorithm, which we call the rates-FPCD sampler. Interestingly, this sampler can improve the model as we collect more samples, since it optimizes a lower bound on the log likelihood of the training data. We provide empirical evidence that this new algorithm displays substantially better and more robust mixing than Gibbs sampling."
    },
    "2949304624": {
        "logprob": -20.069,
        "prob": 1.9237297e-09,
        "Id": 2949304624,
        "Ti": "automatic differentiation in ml where we are and where we should be going",
        "Pt": "8",
        "Y": 2018,
        "D": "2018-10-26",
        "CC": 3,
        "FamId": 2890411254,
        "DN": "Automatic differentiation in ML: Where we are and where we should be going.",
        "VFN": "arXiv: Learning",
        "S": [
            {
                "Ty": 3,
                "U": "http://export.arxiv.org/pdf/1810.11530"
            },
            {
                "Ty": 3,
                "U": "https://arxiv.org/pdf/1810.11530"
            },
            {
                "Ty": 1,
                "U": "https://arxiv.org/abs/1810.11530"
            },
            {
                "Ty": 1,
                "U": "https://export.arxiv.org/abs/1810.11530"
            }
        ],
        "BV": "arXiv preprint arXiv:1810.11530",
        "BT": "a",
        "AA": [
            {
                "DAuN": "Bart van Merri\u00ebnboer",
                "AuN": "bart van merrienboer",
                "AuId": 256273151,
                "DAfN": "Google"
            },
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Arnaud Bergeron",
                "AuN": "arnaud bergeron",
                "AuId": 2135636294,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Pascal Lamblin",
                "AuN": "pascal lamblin",
                "AuId": 2309553220,
                "DAfN": "Google"
            }
        ],
        "F": [
            {
                "FN": "dataflow programming",
                "FId": 2781226572
            },
            {
                "FN": "functional programming",
                "FId": 42383842
            },
            {
                "FN": "operator overloading",
                "FId": 139485218
            },
            {
                "FN": "compiler",
                "FId": 169590947
            },
            {
                "FN": "toolchain",
                "FId": 2777062904
            },
            {
                "FN": "python",
                "FId": 519991488
            },
            {
                "FN": "automatic differentiation",
                "FId": 133512626
            },
            {
                "FN": "recursion",
                "FId": 106663253
            },
            {
                "FN": "programming language",
                "FId": 199360897
            },
            {
                "FN": "computer science",
                "FId": 41008148
            }
        ],
        "J": {
            "JN": "arxiv learning",
            "JId": 2597173376
        },
        "abstract": "We review the current state of automatic differentiation (AD) for array programming in machine learning (ML), including the different approaches such as operator overloading (OO) and source transformation (ST) used for AD, graph-based intermediate representations for programs, and source languages. Based on these insights, we introduce a new graph-based intermediate representation (IR) which specifically aims to efficiently support fully-general AD for array programming. Unlike existing dataflow programming representations in ML frameworks, our IR naturally supports function calls, higher-order functions and recursion, making ML models easier to implement. The ability to represent closures allows us to perform AD using ST without a tape, making the resulting derivative (adjoint) program amenable to ahead-of-time optimization using tools from functional language compilers, and enabling higher-order derivatives. Lastly, we introduce a proof of concept compiler toolchain called Myia which uses a subset of Python as a front end."
    },
    "2890411254": {
        "logprob": -20.069,
        "prob": 1.9237297e-09,
        "Id": 2890411254,
        "Ti": "automatic differentiation in ml where we are and where we should be going",
        "Pt": "3",
        "Y": 2018,
        "D": "2018-10-01",
        "CC": 10,
        "FamId": 2890411254,
        "DN": "Automatic differentiation in ML: Where we are and where we should be going",
        "LP": "8767",
        "VFN": "Neural Information Processing Systems",
        "FP": "8757",
        "VSN": "NEURIPS",
        "S": [
            {
                "Ty": 3,
                "U": "https://arxiv.org/pdf/1810.11530.pdf"
            },
            {
                "Ty": 3,
                "U": "https://papers.nips.cc/paper/8092-automatic-differentiation-in-ml-where-we-are-and-where-we-should-be-going.pdf"
            },
            {
                "Ty": 1,
                "U": "https://arxiv.org/abs/1810.11530"
            },
            {
                "Ty": 1,
                "U": "https://dblp.uni-trier.de/db/conf/nips/nips2018.html#MerrienboerBBL18"
            },
            {
                "Ty": 1,
                "U": "https://papers.nips.cc/paper/8092-automatic-differentiation-in-ml-where-we-are-and-where-we-should-be-going"
            },
            {
                "Ty": 1,
                "U": "https://research.google/pubs/pub47376/"
            },
            {
                "Ty": 1,
                "U": "https://ui.adsabs.harvard.edu/abs/2018arXiv181011530V/abstract"
            },
            {
                "U": "https://ai.google/research/pubs/pub47376"
            }
        ],
        "BV": "Advances in Neural Information Processing Systems",
        "BT": "p",
        "AA": [
            {
                "DAuN": "Bart van Merri\u00ebnboer",
                "AuN": "bart van merrienboer",
                "AuId": 256273151,
                "DAfN": "Google"
            },
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Arnaud Bergeron",
                "AuN": "arnaud bergeron",
                "AuId": 2135636294,
                "DAfN": "Universit\u00e9 de Montr\u00e9al"
            },
            {
                "DAuN": "Pascal Lamblin",
                "AuN": "pascal lamblin",
                "AuId": 2309553220,
                "DAfN": "Google"
            }
        ],
        "F": [
            {
                "FN": "dataflow programming",
                "FId": 2781226572
            },
            {
                "FN": "functional programming",
                "FId": 42383842
            },
            {
                "FN": "operator overloading",
                "FId": 139485218
            },
            {
                "FN": "compiler",
                "FId": 169590947
            },
            {
                "FN": "toolchain",
                "FId": 2777062904
            },
            {
                "FN": "python",
                "FId": 519991488
            },
            {
                "FN": "automatic differentiation",
                "FId": 133512626
            },
            {
                "FN": "recursion",
                "FId": 106663253
            },
            {
                "FN": "programming language",
                "FId": 199360897
            },
            {
                "FN": "computer science",
                "FId": 41008148
            }
        ],
        "C": {
            "CN": "neurips",
            "CId": 1127325140
        },
        "abstract": "We review the current state of automatic differentiation (AD) for array programming in machine learning (ML), including the different approaches such as operator overloading (OO) and source transformation (ST) used for AD, graph-based intermediate representations for programs, and source languages. Based on these insights, we introduce a new graph-based intermediate representation (IR) which specifically aims to efficiently support fully-general AD for array programming. Unlike existing dataflow programming representations in ML frameworks, our IR naturally supports function calls, higher-order functions and recursion, making ML models easier to implement. The ability to represent closures allows us to perform AD using ST without a tape, making the resulting derivative (adjoint) program amenable to ahead-of-time optimization using tools from functional language compilers, and enabling higher-order derivatives. Lastly, we introduce a proof of concept compiler toolchain called Myia which uses a subset of Python as a front end."
    },
    "2904635898": {
        "logprob": -21.466,
        "prob": 4.758112e-10,
        "Id": 2904635898,
        "Ti": "automatic differentiation in myia",
        "Pt": "0",
        "Y": 2017,
        "D": "2017-10-28",
        "CC": 5,
        "DN": "Automatic Differentiation in Myia",
        "S": [
            {
                "Ty": 3,
                "U": "https://openreview.net/pdf?id=S1hcluzAb"
            },
            {
                "Ty": 1,
                "U": "https://openreview.net/forum?id=S1hcluzAb"
            }
        ],
        "BT": "a",
        "AA": [
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": ""
            },
            {
                "DAuN": "Bart van Merri\u00ebnboer",
                "AuN": "bart van merrienboer",
                "AuId": 256273151,
                "DAfN": ""
            }
        ],
        "F": [
            {
                "FN": "automatic differentiation",
                "FId": 133512626
            },
            {
                "FN": "computer science",
                "FId": 41008148
            },
            {
                "FN": "pattern recognition",
                "FId": 178980831
            },
            {
                "FN": "artificial intelligence",
                "FId": 154945302
            }
        ],
        "abstract": ""
    },
    "631010641": {
        "logprob": -23.98,
        "prob": 3.8514e-11,
        "Id": 631010641,
        "Ti": "echantillonnage dynamique de champs markoviens",
        "Pt": "0",
        "Y": 2010,
        "D": "2010-03-04",
        "CC": 0,
        "DN": "\u00c9chantillonnage dynamique de champs markoviens",
        "S": [
            {
                "Ty": 1,
                "U": "https://papyrus.bib.umontreal.ca/xmlui/handle/1866/4316"
            },
            {
                "U": "https://papyrus.bib.umontreal.ca/xmlui/bitstream/1866/4316/2/Breuleux_Olivier_2010_memoire.pdf"
            }
        ],
        "BT": "a",
        "AA": [
            {
                "DAuN": "Olivier Breuleux",
                "AuN": "olivier breuleux",
                "AuId": 298812021,
                "DAfN": ""
            }
        ],
        "F": [
            {
                "FN": "boltzmann machine",
                "FId": 192576344
            },
            {
                "FN": "artificial intelligence",
                "FId": 154945302
            },
            {
                "FN": "computer science",
                "FId": 41008148
            },
            {
                "FN": "markov chain monte carlo",
                "FId": 111350023
            }
        ],
        "abstract": ""
    }
}